// Schema for an identity service for a SaaS
// This service tracks existing users & their accounts, as well as invites for users who haven't joined yet

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["dataproxy"]
}

datasource db {
  provider = "mysql"
  url = "mysql://1eaycpl7jx2r:pscale_pw_pyNhLQlH-PXpajARN2dN36bVDZbIsXfKqN8qKiJHMiU@uzona5pk697e.us-east-2.psdb.cloud/expired?sslaccept=strict"
}

model User {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String?
  email     String
  accountId String?
  account   Account? @relation(fields: [accountId], references: [id])
}

model Account {
  id                   String   @id @default(uuid())
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  stripeCustomerId     String
  stripeSubscriptionId String
  referrer             String?
  isActive             Boolean
  invites              Invite[]
  users                User[]
}

model Invite {
  id        String   @id @default(uuid())
  dateSent  DateTime @default(now())
  email     String
  accountId String?
  isValid   Boolean  @default(true)
  account   Account? @relation(fields: [accountId], references: [id])
}

model Item {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  startTime DateTime
  endTime   DateTime
  imagePath String
}

model Category {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
}